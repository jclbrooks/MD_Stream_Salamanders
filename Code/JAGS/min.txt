
    model{
    # Priors
    for(s in 1:n_streams) {
    Z_N[s] ~ dnorm(0, 1)
    }
    sigma_stream ~ dt(0, 1/(5^2), 1)I(0, ) # half cauchy with scale = 5
    
    a0 ~ dnorm(0, 0.25)
    a1 ~ dnorm(0, 0.25)
    a2 ~ dnorm(0, 0.25)
    
    b0 ~ dnorm(0, 1/(3^2))
    
    # likelihood
    for(i in 1:n_transects) {
    N[i] ~ dpois(lambda[i])
    log(lambda[i]) = a0 + Z_N[stream[i]] * sigma_stream + a1 * up[i] + a2 * down[i]
    for(j in 1:n_visits) {
    lp[i,j] <- b0 # b1 * temp[i,j] + b2 * precip[i,j] 
    Count[i,j] ~ dbin(p[i,j], N[i])
    p[i,j] <- 1 / (1 + exp(-lp.lim[i,j]))    
    lp.lim[i,j] <- min(999, max(-999, lp[i,j])) # Help stabilize the logit
    }
    }
    } # end model
    
